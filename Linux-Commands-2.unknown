Linux-Commands-2





1.To create a user :
syntax :- useradd <user-name>
2.To Check whether user is created or not/ User file
path :- /etc/passwd
3.How to secure the user
synatx :- passwd <user-name>
4.To login as a user/switch
syntax :- su - user-name
Root :- switching to user account it will not ask a password Why because
        Root user is a person one who created a user and he is a
        super user
user wants to switch to another user accont we need to add a password
for the user...
*) To logout as a user use :- exit
5.For securing the password we need to Encrypt
syntax :- openssl passwd <user-name>
6.chage :- To display a password related information
synatx :- chage -l <user-name>
7.To delete a user
synatx :- userdel -r <user-name>

For maintiang a users iam going to create a supparate group for users
1.To create a group
syntax :- groupadd <group-name>
2.To check or group file
syntax :- cat /etc/group
3.To add a user into group
syntax :- usermod -a -G <group> <user-name>
4.To Rename the group
syntax :- groupmod -n <new-name> <old-name>
5.Remove a user from group
syntax :- gpasswd -d <user-name> <group>
6. View Group List for a Specific User Using groups
syntax :- groups <username>
7. to delete group
syntax :- groupdel <groupname>
8. To display who is a member of a group, use the getent command.
syntax :- getent group group-name
9. Set password for group
syntax :- gpasswd <groupname>



File Management:
------------------------------------------------------------------
Some important directories to take note of are:
1./    : root Directory
2./bin : binary or executable programs
        (nice place for keeping persistent scripts)
3./etc : system configuration files (an awesome place to obtain
        credentials)
4./home: home directory (the default current directory when you
        open up the terminal)
5./opt : optional or third-party software
6./tmp : temporary space, usually cleared on reboot (a great place
        to store enumeration scripts)
7./usr : User related programs
8./var : log files (the perfect place to frustrate a forensic
        analyst)




man is a command this will provide all the information about the command

s1 
s2

file permission
read-r-4
write-w-2
execute-x-1
--------------
total    -7  (7 means we have given all the permission)

eg chmod 777 filename.txt 

owner Groups others
-rwx  rwx    rwx

here in the above eg we have given read write and execute permission for all the user that is owner,groups,others

----
to exit the file we have enterd via vi
but the file permission ha only readonly then to come out of the editor use the command ":qa"

symbol and the working

to add the permission "+"
to remove the permission "-"
to set a designated permission "="

chmod u=r+x,g+r,o+x filename



Sir given notes

File Permissions :-
--------------------
Source code :- modify (dev) --test (read)
Permissions for users :
----------------------------
1.owner permissions
2.group permissions
3.other permissions
File/directory  access modes
-------------------------------
1.Read permissions
2.Write permissions
3.Execute permissions
Permissions mode
----------------------
1.Numeric
2.Alphbets
syntax :- chmod 777 <file/dir>
7:- owner (4+2+1)
7:- group
7:- other
4:- read
2:- write
1:- execute
-rw-r--r--
3 :- owner
3:- group
3 :- other
rw
r
r
-r---w---x
owner :- read :- 4
group :- write :-2
other :- execute :- 1
rwx      rwx       rwx
owner(7) group(7) other(7)



---------------------

uname -a this will provide all the details


uname :- to get a information about my system and operting system,
         machine,release,version..
uname :- to know about kernal
uname -o :- to get to know about os
uname -r :- to know about kernal release
uname -v :- To know about version of kernal
uname -m :- to know about a machine
uname -a :- To get all the information


cal :- to print a calendr
synatx :- cal
          cal <mon> <year>
          cal <year>
16.date :- print the date with time,day,year

---------------------------------------------------------------------------

How to cp or move multiple files to a single directory

1st method 
cp F1.txt F2.txt F3.txt F4.txt /root/Sample/

here we can see in the above command cp is the command to copy and F*** are the files that is going to be copied to the path /root/Sample/

2nd method
by converting it into tar file (or we can compress it into zip file also)

Syntax :- tar cvf <file.tar> <file1 file2 file3>


tar cvf ZIPfil0e.tar F1.txt F2.txt F3.txt F4.txt

to untar the file use the below command
tar xvf ZIPfil0e.tar


NOtes From Sir
--------------------
File compression formates :
------------------------------------------------------------------
--------------------------------------=---------------------------
It is mainly used to compress the file by this the size of the file will get
Reduce and quality of the file will be remain same...
Why we need to compress the file size
-> To save the storage space...
--> Easily we can share a file
i)tar
ii)zip
iii)gzip
1)tar(tape archive):-
create :- tar cvf <file.tar> <file1 file2 file3>
c :- create
v :- verbosly
f :- file
Example :- tar cvf jspider.tar f1.txt f2.txt f3.txt
================================================================
Extract :- tar xvf <file.tar>
x :- Extract
v :- verbosely
f :- file
example :- tar xvf jspider.tar
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
to remove files based on its extension
rm *.txt :- to remove similer kind of files
rm *     :- to remove full files


2.zip formate :-  package and compress (archive) files
create :- zip <file.zip> <file1 file2 file3>
example :- zip jspider.zip a1.txt a2.txt a3.txt
Extract :- unzip <file-name>
Example :- unzip jspider.zip
====================================================================
3.gzip - For compressing a individul file...
syntax :- gzip <file>
Example :- gzip devops.txt
Extract - For extract individul file...
syntax :- gzip -d <file.gz>
Example :- gzip -d wddm12.tar.gz
eg1 -   gzip devops.txt       --> devops.txt.gz
        gzip -d devops.txt.gz --> devops.txt
eg2 -   gzip tester.tar       --> tester.tar.gz
        gzip -d tester.tar.gz --> tester.tar


==================================

==================================================================
link path to given name --> files management
==================================================================
1. to create multiple directory in given path
syntax :- mkdir -p sample/demo/old/devops
2. to create file inside dirctory in given path
syntax :-  vi sample/demo/old/devops/file1.txt
3. ln - to make links between files. -s make symbolic link
syntax :- ln -s sample/demo/old/devops/file1.txt <link_name>
eg :- ln -s sample/demo/old/devops/file1.txt sak
4. to unlink between files. call the unlink function to
        remove the specified file
syntax :- unlink <link_name>
eg :- unlink sak
5. to read that linked files
syntax :- cat <link_name>
eg :-  cat sak
6. to move that file from that link to another directory
        after that file only will moved in given directory
syntax :- mv  sample/demo/old/devops/file1.txt <directory_name>
eg :- mv  sample/demo/old/devops/file1.txt demo/
7. to move that same file into previous setted path directory
syntax :- mv <path of that file> <path of that file to be moved>
eg :- mv demo/file1r.txt sample/demo/old/devops/file1.txt
8. to show newest file in given list
syntax :- ls -lt  <-l --> use a long listing format>
                  <-t --> sort by modification time, newest first>


===========================
-------------------------------------------------------------------
1.Networking Commands :-
-------------------------------------------------------------------
-------------------------------------------------------------------
i)ifconfig :- It is used to display the ip related information.
        or ip address <provide full details of that network>
ii)ping :- send ICMP ECHO_REQUEST to network hosts
iii)netstat :- It is used to check the network conncetions,routing table information
               interface statics,it will be help for debugging a the servers which
               all are running which port..
iv)ss(socket statitics) :- It is similar to netstat but addtionally give more info
                            about tcp.
v)host :- It is used to get a information realted to DNS servers
        --> host -aCdilrTvV
vi)nslookup :- DNS lookup records.
        { query Internet name servers interactively }
vii)dig(domain infomation groper) :- DNS lookup utility.
viii)last :- to display the recent login users information                  

============================


3.Disk Utility :
-------------------------------------------------------------------
Disk utility commands are used to easliy monitor the system or storage
related information, and to manage disk partitions ....

1.fdisk(fixed-disk)//used to manipulate disk partition table
syntax :- fdisk <diskpath> (double tap tab butten)
it will show :- Welcome to fdisk (util-linux 2.30.2).
to quite :- ctrl + c

2.df :- it is used to get the infomration about disk usage..
  df -h :- To display the disk usage in human readable lang...

3.parted :- it is used to get a information about a partitions and by using
            we can create a new partitions also ...
synatx :- parted -l

4.lsblk :- list block devices
lsblk  lists  information  about all available or the
       specified block devices.  The lsblk command reads the
       sysfs filesystem and udev db to gather information.
syntax :- lsblk

5. to check the disk space usage
syntax :- du

6. to check disk space usage in human readable format
syntax :- du -h

7. to show the disk usage for all the files.
syntax :- du -a

8. it will show the total disk space used by a specific directory or file.
syntrax :- du -s

9.This option is used to display the last modification time in the
        output of du.
syntax :- du --time <directory name>
eg1 :- du --time sample/

==================================================================


Filter commands:
------------------------------------------------------------------------
1.Head :-It is used to print the statring lines of file
         by default it will print 10 lines
syntax :- head <file-name>
i) To print a specific lines
synatx :- head -n <num> file-name
eg1 -     head -n 2 sample.txt
          head -<num> file-name
eg2 -     head -3 sample.txt
-------------------------------------------------------------------
2)Tail :- It will display the data from a last line(count the lines from
          last line) Default 10 lines
synatx :- tail <file-name>
i) Number of lines :- tail -n <num> file
        
eg1 -                <tail -n 6 sample.txt>


3.Pipeline :- To combine a multiple commands and it will pass the output
              of 1st command as an input to 2nd command
syntax :- cmd1 | cmd2
example :- head -5 students.txt | tail -2


4.sort :- To display the data in ascending or descending
syntax :- sort <file-name> :- ascending order
eg1 -     <sort sample.txt>
          sort -r <file-name> :- Desending order
eg2 -     <sort -r sample.txt>

===================================
5.Uniq :- By using this we can display/find the duplicate data
i) I want to count a number of occurance of a char
syntax :- uniq -c <file>
ii) To print only duplicate data
syntax :- uniq -d <file-name>
iii) to print duplicate data and count
syntax :- uniq -cd <file-name>
iv) to print only unique lines
syntax :- uniq -u <file-name>

.find :- It is used to search a speific data
i) It will search for file in user directories
syntax :- find -name <file-name>
ii) It will search for in given directory
syntax :- find <from directory> -name <file name>
eg 1 :-   find ./ -name sample.txt
iii) search for empty files
syntax :- fnd <from directory> -empty
eg 1 :- find ./ -empty
iv) search for the file with entered permissions
syntax :- find <from directory> -perm <num permission>
eg 1 :- find ./ -perm 664



":q!" this command is used to come out of the vi editor 




7.grep print lines matching a pattern
i) grep :- group regular expression
syntax :- grep <search-word> <filename>
eg 1 :- grep "one" file.txt
ii) to Displaying the count of number of matches
syntax :- grep -c <search-word> <filename>
eg 1 :- grep -c "one" file.txt
iii) to Displaying only the matched pattern
syntax :- grep -o <search-word> <filename>
eg 1 :- grep -o "one" file.txt


8.sed (stream editor) :-  stream editor for filtering and
                        transforming text
syntax :- sed 's/old-data/new-data/' <file-name>
i)Change a data in entire file
syntax :- sed 's/old-data/new-data/' <file-name>
ii) Printing cahnged data for 2x times
syntax :- sed 's/old-data/new-data/p' <file-name>
iii) Replace the specific line :
syntax :- sed '2 s/old-data/new-data/' <file-name>


9)awk :- Text processing in linux
         pattern scanning and processing language
syntax :- awk '{print}' file  --> it will print same
example :- awk '{print}' student.txt
Features :
1.It scans a file line by line
2.it formates the output file
3.it will compare
i) to Print the lines which match the given pattern.
syntax :- awk '/<filter_word>/ {print}' <file>
eg 1 :- awk '/manager/ {print}' employee.txt
ii) To print a specified a column :
syntax :- awk '{print $1,$2}' file-name
iii) I want to print a serial number with data
syntax :- awk '{print NR,$0}' file-name


10.tr :- Translate or delete characters
i) to change characters
syntax :- cat <file> | tr [old char] [new char]
eg 1 :- cat greekfile | tr [a-z] [A-Z]
ii) to change word
syntax :- command | tr <old> <New>
example :- cat <file> | tr <oldword> <newword>
eg 1 :-    cat student.txt | tr mech MECH