-----------------------------------Jenkins Installation and its use-----------------------------------

#!/bin bash
sudo yum update -y
sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
sudo yum upgrade -y
sudo amazon-linux-extras install java-openjdk11 -y
sudo yum install jenkins -y
sudo systemctl enable jenkins
sudo systemctl start jenkins
sudo systemctl status jenkins
echo "******* jenkins installed successfully *******"





go ec2-particular sec group  here we need to activate from port 80 (HTTP)

then to check for connectivity publicIP:8080
after that in the browser will get the jenkins homepage where we will be seeing the below path

/var/lib/jenkins/secrets/initialAdminPassword

copy the above path  and go to our linux server

sudo cat /var/lib/jenkins/secrets/initialAdminPassword

here we will get the autogenerated the password
e45410fc72c44f779fa925c46f7b929c

paste the above password in the browser 

later click on install required plugins

now we need to config give simple name user and id  (admin)

save and continue

start with jenkins


------configuration with jenkins--------------Scenario 1  where we are going to manually create build by clicking on build now

1.clink on new item
2.provide item name
3.select free style project and click on ok
4.provide general info
select SCM as GIT
provide repo URL

5.in our server install git

sudo yum install git -y

6.now got to browser again and refresh it will take the repo URL

click on apply and save

7.click on build now
we will get the information of our build



configuration with jenkins by adding git repositary + build periodically  (here we are going to get the build for particular interval what we have set to create a build)
1.click on new item
2.item name as secoonf job
3.select free style project and click on ok
4.copy the git url and paste it on jenkins
5.now in Build trigger catalog
select Build peridicaly
this will be asking for scheduled

here we tell to generate the build every min
(* * * * *)

Examples:

# Every fifteen minutes (perhaps at :07, :22, :37, :52):
H/15 * * * *
# Every ten minutes in the first half of every hour (three times, perhaps at :04, :14, :24):
H(0-29)/10 * * * *
# Once every two hours at 45 minutes past the hour starting at 9:45 AM and finishing at 3:45 PM every weekday:
45 9-16/2 * * 1-5
# Once in every two hour slot between 8 AM and 4 PM every weekday (perhaps at 9:38 AM, 11:38 AM, 1:38 PM, 3:38 PM):
H H(8-15)/2 * * 1-5
# Once a day on the 1st and 15th of every month except December:
H H 1,15 1-11 *


we can disable the build by clicking on "Disable Project"


-----------configuration with jenkins by adding git repositary+POLL SCM

in this scenario it will create a build only if there is any new commit from the developers

1.create on new item
2.give name third job
3.select free style management
click on ok

4.add with git URL

5.in build triggers catalog there is a option call POLL SCM


-------------configuration with jenkins with webhook------------------------
click on new item
give name and select free style project and click on ok

go to github goto the particular repo where we pushed the file yesterday 
here we need to do some config

click on settings

here we have webhooks click on that 
add webhook 

copy the jenkins url 
http://35.154.11.67:8080/ 

url should be like below where we need to add /github-webhook/

http://35.154.11.67:8080/github-webhook/

and add the above url in payload url of webhook

and select content as application/json

copy the repo path and add to SCM in jenkins server

go to build trigger and check github build trigger for GITScm polling

apply and save

and click on build now 

later when there is a push from dev then only it will trigger the build


----------
now in jenkins server 

go to manage plugins

then go to plugin manager  > available plugins > select maven integration 3.22 and click on no restart

then click manage jenkins > global tool config > add maven> give name >click on apply and save

now create a new item > select on maven project > click on ok 

(repo should contain pom file then only we can create jar file) provide git repo URL

then go to build catalog

provide goals and options like (clean package install etc)

now click on build now

after build is created go to workspace we will get all the details such as jar files etc

-------------------------

Jenkins pipe line (JSON is required) / by writing the script/ or by declarativeMode

create new item with pipeline an click on ok

and goto pipeline option and paste the script  (below is a sample script)

pipeline  
{
    agent any
    tools {
        maven 'maven'
    }
    stages {
        stage('git clone') {
            steps {
                git 'https://github.com/sreenidhipalimar98/maven-integration-mytestfile.git'
            }
        }
        stage('compile') {
            steps {
                sh 'mvn compile'
            }
        }
        stage('test') {
            steps {
                sh "mvn test"
            }
        }
        stage('package') {
            steps {
                sh "mvn package"
            }
        }

    }
}

click on apply and save

and build now



----------------

using declarative mode

create a file in github

or push a code to github which contains script

inside the jenkins server interface create a new item

select pipeline >ok

here select SCM and provide the url and provide the script path(name of the file) click on appaly and save

click on build now 


-------------------------------------

user management in jenkins ///as of now we are working with admin priviledge

1.click on manage jenkins
2.in security we have manage user click on that
3.we will be having a default user as admin
4.click on create user
5.provide the details and click on create user
to provide permission click on configure global security>autherization>project based matrix authorization strategy>
add user>select username>check which all access is required (like read job and to create workspave or give overall read permission) click on apply and save
6.create a new item and select a free style project provide git url click on appaly and save
7.now click on build

================
upstream and downstream(here the process of development - testting -deployment) we need 3 item

1.provide a new item with free style 
we can configure git else not required
2.go to build steps >use execute shell command
echo "developers"
3.click on apply and save

4.go to dashboard > new item provide the name>free style>ok
go to build triggers
build after other projects are build
provide the name which is it needs to trigger first
"check the box 

add  with new shell
echo "testing is done"


5.new item deployment with free style project

in build triggers 
build after other project are build
provide testing

